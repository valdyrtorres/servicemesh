Service Mesh

Istio estudo

Instalar o k3d que um lightweight wrapper para executar o k3s(Rancher Lab's minimal Kubernetes distribution) no docker
----
DETALHE: USAR no linux ou WSL (se não fizer, vai dar ruim, pois o istio só roda no linux por enquanto)
- Criando cluster
k3d cluster create -p "8000:30000@loadbalancer" --agents 2

kubectl config use-context k3d-k3s-default

kubectl get nodes

- instalação Istio via wsl

- configuração do perfil istio (Installation Configuration Profiles)
istioctl install

kubectl get pods

kubectl get ns (lista namespaces)

kubectl get pods -n istio-system

kubectl get svc

kubectl get svc -n istio-system

------------
Diretório exps 
kubectl apply -f deployment.yaml

kubectl get pods

kubectl label namespace default istio-injection=enabled

kubectl delete deploy nginx

kubectl apply -f deployment.yaml

kubectl describe pod nginx-6b9f9c55f-925ww

--------------------------

ADD-ONS
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/addons/prometheus.yaml
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/addons/kiali.yaml
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/addons/jaeger.yaml
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/addons/grafana.yaml

kubectl get pods -n istio-system

troubleshooting:

kubectl describe pod kiali-5446b88647-2jpjm -n istio-system

kubectl describe pod istio-ingressgateway-6fc5889967-z5n87 -n istio-system

kubectl get svc istio-ingressgateway -n istio-system -o yaml

kubectl get pods -n istio-system
Resultado:
valdir@DESKTOP-PEO6P42:/mnt/c/VALDIR/devcode/fullcycle/servicemesh/exps$ kubectl get pods -n istio-system
NAME                                    READY   STATUS    RESTARTS   AGE
grafana-657df88ffd-655kv                1/1     Running   0          53m
istio-ingressgateway-6fc5889967-z5n87   1/1     Running   0          106m
istiod-d56968787-ck5jp                  1/1     Running   0          107m
jaeger-697d898d6-7t75j                  1/1     Running   0          54m
kiali-5446b88647-2jpjm                  1/1     Running   0          55m
prometheus-777db476b6-bjqmt             2/2     Running   0          56m

Tudo funcionando

istioctl dashboard kiali

segundo o Wesley, o istio trata com maestria o gerenciamento de tráfego

faz balanceamento de carga também

Circuit Breaker

---------

Atualizando o deployment.yaml com mais um nginx e serviço:
nginx
nginx-b
nginx-service

kubectl apply -f .
kubectl get pod
kubectl get svc

while true;do curl http://localhost:8000; echo; sleep 0.5; done;

aumentando o número de réplicas (deploy canary)
replicas: 5

Versao:
version: A

troubleshooting
k3d cluster delete mycluster

k3d cluster list

k3d cluster delete k3s-default

k3d cluster create k3s-valdir -p "8000:30000@loadbalancer" --agents 2

kubectl config use-context k3d-k3s-valdir

Obs: k3d cluster create -p "8000:30000@loadbalancer" --agents 2

kubectl get nodes

kubectl apply -f .
kubectl get pod
kubectl get svc

 istioctl install
 kubectl get svc istio-ingressgateway -n istio-system -o yaml

kubectl get pods -n istio-system

kubectl get namespace default --show-labels
--------------------------

Um criador de carga o fortio que substitui o:

while true;do curl http://localhost:8000; echo; sleep 0.5; done;

kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.23/samples/httpbin/sample-client/fortio-deploy.yaml

kubectl get pods

$ export FORTIO_POD=$(kubectl get pods -l app=fortio -o 'jsonpath={.items[0].metadata.name}')
$ kubectl exec "$FORTIO_POD" -c fortio -- /usr/bin/fortio curl -quiet http://httpbin:8000/get

kubectl exec "$FORTIO_POD" -c fortio -- fortio load -c 2 -qps 0 -t 200s -loglevel Warning http://nginx-service:8000
